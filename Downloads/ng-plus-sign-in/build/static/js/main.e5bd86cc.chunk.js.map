{"version":3,"sources":["components/signup.js","components/CreatorTypeform.js","app.js","index.js"],"names":["SignUp","userType","setUserType","useState","formData","setFormData","name","email","displayName","twitterHandle","studioName","gameTitle","navigate","useNavigate","handleUserTypeSelect","type","handleChange","e","value","target","_jsx","children","_jsxs","onSubmit","async","preventDefault","data","fetch","method","headers","body","JSON","stringify","ok","console","log","error","_Fragment","placeholder","onChange","required","onClick","CreatorTypeform","gameGenres","setGameGenres","App","className","Routes","Route","path","element","ReactDOM","render","BrowserRouter","document","getElementById"],"mappings":"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","file":"static/js/main.e5bd86cc.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom'; // Change this line\r\nimport CreatorProfile from './creatorprofile';\r\nimport StudioProfile from './studioprofile';\r\n\r\nconst SignUp = () => {\r\n  const [userType, setUserType] = useState(null);\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    email: '',\r\n    displayName: '',\r\n    twitterHandle: '',\r\n    studioName: '',\r\n    gameTitle: '',\r\n  });\r\n  const navigate = useNavigate(); // Change this line\r\n\r\n  const handleUserTypeSelect = (type) => {\r\n    setUserType(type);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const data = userType === 'creator' ? {\r\n      type: 'creator',\r\n      name: formData.name,\r\n      email: formData.email,\r\n      displayName: formData.displayName,\r\n      twitterHandle: formData.twitterHandle,\r\n    } : {\r\n      type: 'studio',\r\n      studioName: formData.studioName,\r\n      email: formData.email,\r\n      gameTitle: formData.gameTitle,\r\n      twitterHandle: formData.twitterHandle,\r\n    };\r\n\r\n    try {\r\n      const response = await fetch('https://script.google.com/macros/s/AKfycbwDGKk9qVo0damvttncn08M2fBH3_UwaAMh7_RjTDdb6etVhocaWp6nKIh0AV86YEVR/exec', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(data),\r\n      });\r\n\r\n      if (response.ok) {\r\n        console.log(`${userType} profile submitted successfully`);\r\n        navigate('/creator-typeform'); // Navigate to the first typeform question\r\n      } else {\r\n        console.error('Error submitting profile');\r\n      }\r\n    } catch (error) {\r\n      console.error('Network error:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {!userType ? (\r\n        <div>\r\n          <button onClick={() => handleUserTypeSelect('creator')}>Sign Up as Creator</button>\r\n          <button onClick={() => handleUserTypeSelect('studio')}>Sign Up as Game Studio</button>\r\n        </div>\r\n      ) : (\r\n        <form onSubmit={handleSubmit}>\r\n          {userType === 'creator' && (\r\n            <>\r\n              <input type=\"text\" name=\"name\" placeholder=\"Name\" onChange={handleChange} required />\r\n              <input type=\"email\" name=\"email\" placeholder=\"Email\" onChange={handleChange} required />\r\n              <input type=\"text\" name=\"displayName\" placeholder=\"Display Name\" onChange={handleChange} required />\r\n              <input type=\"text\" name=\"twitterHandle\" placeholder=\"Twitter Handle\" onChange={handleChange} required />\r\n            </>\r\n          )}\r\n          {userType === 'studio' && (\r\n            <>\r\n              <input type=\"text\" name=\"studioName\" placeholder=\"Studio Name\" onChange={handleChange} required />\r\n              <input type=\"email\" name=\"email\" placeholder=\"Email\" onChange={handleChange} required />\r\n              <input type=\"text\" name=\"gameTitle\" placeholder=\"Game Title\" onChange={handleChange} required />\r\n              <input type=\"text\" name=\"twitterHandle\" placeholder=\"Twitter Handle\" onChange={handleChange} required />\r\n            </>\r\n          )}\r\n          <button type=\"submit\">Submit</button>\r\n        </form>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n","import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst CreatorTypeform = () => {\r\n  const [gameGenres, setGameGenres] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // Here you can save the response to the backend or state management\r\n    console.log('Game Genres:', gameGenres);\r\n    \r\n    // Navigate to the next question or page\r\n    navigate('/next-question'); // Update this to the actual route for the next question\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Welcome to New Game!</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <label>\r\n          What game genres do you like?\r\n          <input\r\n            type=\"text\"\r\n            value={gameGenres}\r\n            onChange={(e) => setGameGenres(e.target.value)}\r\n            required\r\n          />\r\n        </label>\r\n        <button type=\"submit\">Continue</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreatorTypeform;\r\n","import React from 'react';\r\nimport { Route, Routes } from 'react-router-dom';\r\nimport SignUp from './components/signup';\r\nimport CreatorTypeform from './components/CreatorTypeform';\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className=\"app\">\r\n      <h1>Sign Up</h1>\r\n      <Routes>\r\n        <Route path=\"/creator-typeform\" element={<CreatorTypeform />} />\r\n        <Route path=\"/\" element={<SignUp />} />\r\n      </Routes>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport App from './app';\r\nimport './App.css';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}